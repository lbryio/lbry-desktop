// Generic html styles used across the App
// component specific styling should go in the component scss file

*::selection {
  background-color: var(--color-text-selection-bg);
  color: var(--color-text-selection);
}

*:focus {
  outline: none;
}

html {
  @include font-sans;
  height: 100%;
  min-height: 100%;
  overflow-x: hidden;

  color: var(--color-text);
  background-color: var(--color-background);
  font-size: 16px;
}

body {
  font-size: 1em;

  @media (max-width: $breakpoint-small) {
    font-size: 1.3em;
  }
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: 1rem;
}

p {
  & + p {
    margin-top: var(--spacing-small);
  }
}

ul,
ol {
  list-style: initial;

  li {
    list-style-position: outside;
    margin: var(--spacing-xsmall) var(--spacing-medium);
    margin-bottom: 0;
  }
}

.ul--no-style {
  list-style: none;
  margin-bottom: 0;

  li {
    margin: 0;
  }
}

dl {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  overflow-x: visible;
  margin-top: var(--spacing-medium);
}

dt {
  flex-basis: 40%;
  text-align: left;
  font-weight: bold;
}

dd {
  flex-basis: 55%;
  flex-grow: 1;
  margin: 0;
  text-align: right;
}

dt,
dd {
  padding: var(--spacing-medium) var(--spacing-small);

  border-top: 1px solid var(--color-border);

  &:last-of-type {
    border-bottom: 1px solid var(--color-border);
  }
}

input,
label {
  user-select: none;
}

blockquote {
  margin-bottom: 1rem;
  padding: 0.8rem;
  background-color: var(--color-blockquote-bg);
  border-left: 0.3rem solid var(--color-blockquote);
}

code {
  @include font-mono;
  font-size: 1.5rem;
}

hr {
  width: 100%;
  height: 1px;
  background-color: var(--color-border);
}

img,
a {
  -webkit-user-drag: none;
}

.columns {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  flex-wrap: wrap;

  > * {
    flex-grow: 1;
    flex-basis: 0;
    min-width: 15rem;
    margin-bottom: var(--spacing-large);

    &:first-child {
      margin-right: 1.5rem;
    }
  }

  @media (max-width: $breakpoint-small) {
    flex-direction: column;

    & > * {
      margin: 0;
      width: 100%;
      flex-basis: auto;

      &:first-child {
        margin-right: 0;
      }
    }
  }
}

.hidden {
  display: none;
}

.disabled {
  opacity: 0.3;
  pointer-events: none;
}

.column {
  display: flex;

  .column__item:not(:first-child) {
    padding-left: $spacing-width * 2/3;
    flex: 1;
  }
}

.truncated-text {
  display: -webkit-box;
  overflow: hidden;
  -webkit-box-orient: vertical;
  word-break: break-word;
}

.busy-indicator__loader {
  min-width: 16px;
  min-height: 8px;
  margin: -1rem 0;
  padding: 0 30px;

  background: url('../../static/img/busy.gif') no-repeat center center;
  display: inline-block;
  vertical-align: middle;

  &:first-child {
    padding-left: 2px;
  }

  &:last-child {
    padding-right: 2px;
  }
}

.help {
  display: block;
  font-size: var(--font-small);
  color: var(--color-text-help);
  margin-top: var(--spacing-small);
}

.help--warning {
  background-color: var(--color-warning);
  color: var(--color-black);
}

.empty {
  color: var(--color-text-empty);
  font-style: italic;
}

.qr-code {
  width: 134px;
  height: 134px;
  border: 3px solid white;

  &.qr-code--right-padding {
    margin-right: $spacing-vertical * 2/3;
  }

  &.qr-code--top-padding {
    margin-top: $spacing-vertical * 2/3;
  }
}

.error-text {
  color: var(--color-text-error);
}

.thumbnail-preview {
  width: var(--thumbnail-preview-width);
  height: var(--thumbnail-preview-height);

  background-position: 50% 50%;
  background-repeat: no-repeat;
  background-size: cover;
}

.emoji {
  font-size: 1.3em;
}
